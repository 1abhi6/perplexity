"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/app/page.tsx":
/*!**************************!*\
  !*** ./src/app/page.tsx ***!
  \**************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var _components_Header__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/components/Header */ \"(app-pages-browser)/./src/components/Header.tsx\");\n/* harmony import */ var _components_InputBar__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/components/InputBar */ \"(app-pages-browser)/./src/components/InputBar.tsx\");\n/* harmony import */ var _components_MessageArea__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/components/MessageArea */ \"(app-pages-browser)/./src/components/MessageArea.tsx\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_4__);\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\n\n\nconst Home = ()=>{\n    _s();\n    const [messages, setMessages] = (0,react__WEBPACK_IMPORTED_MODULE_4__.useState)([\n        {\n            id: 1,\n            content: 'Hi there, how can I help you?',\n            isUser: false,\n            type: 'message'\n        }\n    ]);\n    const [currentMessage, setCurrentMessage] = (0,react__WEBPACK_IMPORTED_MODULE_4__.useState)(\"\");\n    const [checkpointId, setCheckpointId] = (0,react__WEBPACK_IMPORTED_MODULE_4__.useState)(null);\n    const handleSubmit = async (e)=>{\n        e.preventDefault();\n        if (currentMessage.trim()) {\n            // First add the user message to the chat\n            const newMessageId = messages.length > 0 ? Math.max(...messages.map((msg)=>msg.id)) + 1 : 1;\n            setMessages((prev)=>[\n                    ...prev,\n                    {\n                        id: newMessageId,\n                        content: currentMessage,\n                        isUser: true,\n                        type: 'message'\n                    }\n                ]);\n            const userInput = currentMessage;\n            setCurrentMessage(\"\"); // Clear input field immediately\n            try {\n                // Create AI response placeholder\n                const aiResponseId = newMessageId + 1;\n                setMessages((prev)=>[\n                        ...prev,\n                        {\n                            id: aiResponseId,\n                            content: \"\",\n                            isUser: false,\n                            type: 'message',\n                            isLoading: true,\n                            searchInfo: {\n                                stages: [],\n                                query: \"\",\n                                urls: []\n                            }\n                        }\n                    ]);\n                // Create URL with checkpoint ID if it exists\n                let url = \"http://127.0.0.1:8000//chat_stream/\".concat(encodeURIComponent(userInput));\n                if (checkpointId) {\n                    url += \"?checkpoint_id=\".concat(encodeURIComponent(checkpointId));\n                }\n                // Connect to SSE endpoint using EventSource\n                const eventSource = new EventSource(url);\n                let streamedContent = \"\";\n                let searchData = null;\n                let hasReceivedContent = false;\n                // Process incoming messages\n                eventSource.onmessage = (event)=>{\n                    try {\n                        const data = JSON.parse(event.data);\n                        if (data.type === 'checkpoint') {\n                            // Store the checkpoint ID for future requests\n                            setCheckpointId(data.checkpoint_id);\n                        } else if (data.type === 'content') {\n                            streamedContent += data.content;\n                            hasReceivedContent = true;\n                            // Update message with accumulated content\n                            setMessages((prev)=>prev.map((msg)=>msg.id === aiResponseId ? {\n                                        ...msg,\n                                        content: streamedContent,\n                                        isLoading: false\n                                    } : msg));\n                        } else if (data.type === 'search_start') {\n                            // Create search info with 'searching' stage\n                            const newSearchInfo = {\n                                stages: [\n                                    'searching'\n                                ],\n                                query: data.query,\n                                urls: []\n                            };\n                            searchData = newSearchInfo;\n                            // Update the AI message with search info\n                            setMessages((prev)=>prev.map((msg)=>msg.id === aiResponseId ? {\n                                        ...msg,\n                                        content: streamedContent,\n                                        searchInfo: newSearchInfo,\n                                        isLoading: false\n                                    } : msg));\n                        } else if (data.type === 'search_results') {\n                            try {\n                                // Parse URLs from search results\n                                const urls = typeof data.urls === 'string' ? JSON.parse(data.urls) : data.urls;\n                                // Update search info to add 'reading' stage (don't replace 'searching')\n                                const newSearchInfo = {\n                                    stages: searchData ? [\n                                        ...searchData.stages,\n                                        'reading'\n                                    ] : [\n                                        'reading'\n                                    ],\n                                    query: (searchData === null || searchData === void 0 ? void 0 : searchData.query) || \"\",\n                                    urls: urls\n                                };\n                                searchData = newSearchInfo;\n                                // Update the AI message with search info\n                                setMessages((prev)=>prev.map((msg)=>msg.id === aiResponseId ? {\n                                            ...msg,\n                                            content: streamedContent,\n                                            searchInfo: newSearchInfo,\n                                            isLoading: false\n                                        } : msg));\n                            } catch (err) {\n                                console.error(\"Error parsing search results:\", err);\n                            }\n                        } else if (data.type === 'search_error') {\n                            // Handle search error\n                            const newSearchInfo = {\n                                stages: searchData ? [\n                                    ...searchData.stages,\n                                    'error'\n                                ] : [\n                                    'error'\n                                ],\n                                query: (searchData === null || searchData === void 0 ? void 0 : searchData.query) || \"\",\n                                error: data.error,\n                                urls: []\n                            };\n                            searchData = newSearchInfo;\n                            setMessages((prev)=>prev.map((msg)=>msg.id === aiResponseId ? {\n                                        ...msg,\n                                        content: streamedContent,\n                                        searchInfo: newSearchInfo,\n                                        isLoading: false\n                                    } : msg));\n                        } else if (data.type === 'end') {\n                            // When stream ends, add 'writing' stage if we had search info\n                            if (searchData) {\n                                const finalSearchInfo = {\n                                    ...searchData,\n                                    stages: [\n                                        ...searchData.stages,\n                                        'writing'\n                                    ]\n                                };\n                                setMessages((prev)=>prev.map((msg)=>msg.id === aiResponseId ? {\n                                            ...msg,\n                                            searchInfo: finalSearchInfo,\n                                            isLoading: false\n                                        } : msg));\n                            }\n                            eventSource.close();\n                        }\n                    } catch (error) {\n                        console.error(\"Error parsing event data:\", error, event.data);\n                    }\n                };\n                // Handle errors\n                eventSource.onerror = (error)=>{\n                    console.error(\"EventSource error:\", error);\n                    eventSource.close();\n                    // Only update with error if we don't have content yet\n                    if (!streamedContent) {\n                        setMessages((prev)=>prev.map((msg)=>msg.id === aiResponseId ? {\n                                    ...msg,\n                                    content: \"Sorry, there was an error processing your request.\",\n                                    isLoading: false\n                                } : msg));\n                    }\n                };\n                // Listen for end event\n                eventSource.addEventListener('end', ()=>{\n                    eventSource.close();\n                });\n            } catch (error) {\n                console.error(\"Error setting up EventSource:\", error);\n                setMessages((prev)=>[\n                        ...prev,\n                        {\n                            id: newMessageId + 1,\n                            content: \"Sorry, there was an error connecting to the server.\",\n                            isUser: false,\n                            type: 'message',\n                            isLoading: false\n                        }\n                    ]);\n            }\n        }\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"flex justify-center bg-gray-100 min-h-screen py-8 px-4\",\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"w-[70%] bg-white flex flex-col rounded-xl shadow-lg border border-gray-100 overflow-hidden h-[90vh]\",\n            children: [\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_Header__WEBPACK_IMPORTED_MODULE_1__[\"default\"], {}, void 0, false, {\n                    fileName: \"D:\\\\AI\\\\Agentic AI Course\\\\Projects\\\\Perplexity Clone\\\\client\\\\src\\\\app\\\\page.tsx\",\n                    lineNumber: 233,\n                    columnNumber: 9\n                }, undefined),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_MessageArea__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n                    messages: messages\n                }, void 0, false, {\n                    fileName: \"D:\\\\AI\\\\Agentic AI Course\\\\Projects\\\\Perplexity Clone\\\\client\\\\src\\\\app\\\\page.tsx\",\n                    lineNumber: 234,\n                    columnNumber: 9\n                }, undefined),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_InputBar__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n                    currentMessage: currentMessage,\n                    setCurrentMessage: setCurrentMessage,\n                    onSubmit: handleSubmit\n                }, void 0, false, {\n                    fileName: \"D:\\\\AI\\\\Agentic AI Course\\\\Projects\\\\Perplexity Clone\\\\client\\\\src\\\\app\\\\page.tsx\",\n                    lineNumber: 235,\n                    columnNumber: 9\n                }, undefined)\n            ]\n        }, void 0, true, {\n            fileName: \"D:\\\\AI\\\\Agentic AI Course\\\\Projects\\\\Perplexity Clone\\\\client\\\\src\\\\app\\\\page.tsx\",\n            lineNumber: 232,\n            columnNumber: 7\n        }, undefined)\n    }, void 0, false, {\n        fileName: \"D:\\\\AI\\\\Agentic AI Course\\\\Projects\\\\Perplexity Clone\\\\client\\\\src\\\\app\\\\page.tsx\",\n        lineNumber: 230,\n        columnNumber: 5\n    }, undefined);\n};\n_s(Home, \"e3oUSy1Tbdc/I9j3zwge9Z0Ce6k=\");\n_c = Home;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Home);\nvar _c;\n$RefreshReg$(_c, \"Home\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/page.tsx\n"));

/***/ })

});